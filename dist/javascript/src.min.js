!function(){angular.module("boilerplate",["ngRoute","appRoutes","ngMaterial","mainCtrl"])}(),function(){angular.module("appRoutes",[]).config(["$routeProvider","$locationProvider","$httpProvider",function(n,t,e){n.when("/",{templateUrl:"app/main/main.html",controller:"mainController"}).when("/sign-in",{templateUrl:"app/auth/signin.html",controller:"signInController"}).when("/sign-up",{templateUrl:"app/auth/signup.html",controller:"signUpController"}).otherwise({redirectTo:"/"}),t.html5Mode(!0),e.interceptors.push("authHttpResponseInterceptor")}]).factory("authHttpResponseInterceptor",["$q","$location",function(n,t){return{request:function(n){var t=localStorage.userToken;return n.headers.token=t,n},response:function(t){return 401===t.status,t||n.when(t)},responseError:function(e){return 401===e.status&&(localStorage.removeItem("userToken"),t.path("/")),n.reject(e)}}}])}(),function(){angular.module("boilerplate").factory("authService",["$http",function(n){return{create:function(t,e,o){n.post("/api/users/",t).success(function(n){e(n)}).error(function(n){o(n)})},localAuth:function(t,e,o){n.post("/api/auth/local",t).success(function(n){e(n)}).error(function(n){o(n)})}}}])}(),function(){angular.module("boilerplate").controller("signInController",["$scope","authService",function(n,t){}])}(),function(){angular.module("boilerplate").controller("signUpController",["$scope","authService",function(n,t){}])}(),function(){angular.module("mainCtrl",[]).controller("mainController",["$scope",function(n){}])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFwcC5yb3V0ZXMuanMiLCJhdXRoL2F1dGguc2VydmljZS5qcyIsImF1dGgvc2lnbmluLmN0cmwuanMiLCJhdXRoL3NpZ251cC5jdHJsLmpzIiwibWFpbi9tYWluLmN0cmwuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkaHR0cFByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIm90aGVyd2lzZSIsInJlZGlyZWN0VG8iLCJodG1sNU1vZGUiLCJpbnRlcmNlcHRvcnMiLCJwdXNoIiwiZmFjdG9yeSIsIiRxIiwiJGxvY2F0aW9uIiwicmVxdWVzdCIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwidXNlclRva2VuIiwiaGVhZGVycyIsInJlc3BvbnNlIiwic3RhdHVzIiwicmVzcG9uc2VFcnJvciIsInJlamVjdGlvbiIsInJlbW92ZUl0ZW0iLCJwYXRoIiwicmVqZWN0IiwiJGh0dHAiLCJjcmVhdGUiLCJvYmoiLCJzdWNjZXNzIiwiZXJyb3IiLCJwb3N0IiwiZGF0YSIsImxvY2FsQXV0aCIsIiRzY29wZSIsImF1dGhTZXJ2aWNlIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUNBQSxRQUFBQyxPQUFBLGVBQUEsVUFBQSxZQUFBLGFBQUEsZ0JDREEsV0FDQUQsUUFBQUMsT0FBQSxnQkFBQUMsUUFBQSxpQkFBQSxvQkFBQSxnQkFBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUVBRixFQUdBRyxLQUFBLEtBQ0FDLFlBQUEscUJBQ0FDLFdBQUEsbUJBRUFGLEtBQUEsWUFDQUMsWUFBQSx1QkFDQUMsV0FBQSxxQkFFQUYsS0FBQSxZQUNBQyxZQUFBLHVCQUNBQyxXQUFBLHFCQUVBQyxXQUNBQyxXQUFBLE1BR0FOLEVBQUFPLFdBQUEsR0FDQU4sRUFBQU8sYUFBQUMsS0FBQSxrQ0FJQUMsUUFBQSwrQkFBQSxLQUFBLFlBQUEsU0FBQUMsRUFBQUMsR0FFQSxPQUNBQyxRQUFBLFNBQUFBLEdBQ0EsR0FBQUMsR0FBQUMsYUFBQUMsU0FFQSxPQURBSCxHQUFBSSxRQUFBSCxNQUFBQSxFQUNBRCxHQUVBSyxTQUFBLFNBQUFBLEdBR0EsTUFGQSxPQUFBQSxFQUFBQyxPQUVBRCxHQUFBUCxFQUFBVCxLQUFBZ0IsSUFFQUUsY0FBQSxTQUFBQyxHQUtBLE1BSkEsT0FBQUEsRUFBQUYsU0FDQUosYUFBQU8sV0FBQSxhQUNBVixFQUFBVyxLQUFBLE1BRUFaLEVBQUFhLE9BQUFILFdDN0NBLFdBQ0F6QixRQUFBQyxPQUFBLGVBQUFhLFFBQUEsZUFBQSxRQUFBLFNBQUFlLEdBQ0EsT0FDQUMsT0FBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUNBSixFQUFBSyxLQUFBLGNBQUFILEdBQ0FDLFFBQUEsU0FBQUcsR0FDQUgsRUFBQUcsS0FFQUYsTUFBQSxTQUFBRSxHQUNBRixFQUFBRSxNQUdBQyxVQUFBLFNBQUFMLEVBQUFDLEVBQUFDLEdBQ0FKLEVBQUFLLEtBQUEsa0JBQUFILEdBQ0FDLFFBQUEsU0FBQUcsR0FDQUgsRUFBQUcsS0FFQUYsTUFBQSxTQUFBRSxHQUNBRixFQUFBRSxhQ2xCQSxXQUNBbkMsUUFBQUMsT0FBQSxlQUFBTyxXQUFBLG9CQUFBLFNBQUEsY0FBQSxTQUFBNkIsRUFBQUMsVUNEQSxXQUNBdEMsUUFBQUMsT0FBQSxlQUFBTyxXQUFBLG9CQUFBLFNBQUEsY0FBQSxTQUFBNkIsRUFBQUMsVUNEQSxXQUNBdEMsUUFBQUMsT0FBQSxlQUFBTyxXQUFBLGtCQUFBLFNBQUEsU0FBQTZCIiwiZmlsZSI6InNyYy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XG4gICAgYW5ndWxhci5tb2R1bGUoJ2JvaWxlcnBsYXRlJywgWyduZ1JvdXRlJywgJ2FwcFJvdXRlcycsICduZ01hdGVyaWFsJywgJ21haW5DdHJsJ10pO1xufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gICAgYW5ndWxhci5tb2R1bGUoJ2FwcFJvdXRlcycsIFtdKS5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsICckaHR0cFByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlciwgJGh0dHBQcm92aWRlcikge1xuXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyXG5cbiAgICAgICAgLy8gaG9tZSBwYWdlXG4gICAgICAgICAgICAud2hlbignLycsIHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9tYWluL21haW4uaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC53aGVuKCcvc2lnbi1pbicsIHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9hdXRoL3NpZ25pbi5odG1sJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnc2lnbkluQ29udHJvbGxlcidcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAud2hlbignL3NpZ24tdXAnLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvYXV0aC9zaWdudXAuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3NpZ25VcENvbnRyb2xsZXInXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm90aGVyd2lzZSh7XG4gICAgICAgICAgICAgICAgcmVkaXJlY3RUbzogJy8nXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XG4gICAgICAgICRodHRwUHJvdmlkZXIuaW50ZXJjZXB0b3JzLnB1c2goJ2F1dGhIdHRwUmVzcG9uc2VJbnRlcmNlcHRvcicpO1xuXG4gICAgfV0pXG5cbiAgICAgICAgLmZhY3RvcnkoJ2F1dGhIdHRwUmVzcG9uc2VJbnRlcmNlcHRvcicsIFsnJHEnLCAnJGxvY2F0aW9uJywgZnVuY3Rpb24gKCRxLCAkbG9jYXRpb24pIHtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0OiBmdW5jdGlvbiAocmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSBsb2NhbFN0b3JhZ2UudXNlclRva2VuO1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMudG9rZW4gPSB0b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZXNwb25zZTogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZSB8fCAkcS53aGVuKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlRXJyb3I6IGZ1bmN0aW9uIChyZWplY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlamVjdGlvbi5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJ1c2VyVG9rZW5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnLycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QocmVqZWN0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAgIGFuZ3VsYXIubW9kdWxlKCdib2lsZXJwbGF0ZScpLmZhY3RvcnkoJ2F1dGhTZXJ2aWNlJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uIChvYmosIHN1Y2Nlc3MsIGVycm9yKSB7XG4gICAgICAgICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS91c2Vycy8nLCBvYmopLlxuICAgICAgICAgICAgICAgIHN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzcyhkYXRhKTtcbiAgICAgICAgICAgICAgICB9KS5cbiAgICAgICAgICAgICAgICBlcnJvcihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBlcnJvcihkYXRhKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsb2NhbEF1dGggOiBmdW5jdGlvbiAob2JqLCBzdWNjZXNzLCBlcnJvcikge1xuICAgICAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvYXV0aC9sb2NhbCcsIG9iaikuXG4gICAgICAgICAgICAgICAgc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKGRhdGEpO1xuICAgICAgICAgICAgICAgIH0pLlxuICAgICAgICAgICAgICAgIGVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yKGRhdGEpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgfV0pO1xufVxuKSgpO1xuIiwiKGZ1bmN0aW9uKCl7XG4gICAgICAgIGFuZ3VsYXIubW9kdWxlKCdib2lsZXJwbGF0ZScpLmNvbnRyb2xsZXIoJ3NpZ25JbkNvbnRyb2xsZXInLCAgWyckc2NvcGUnLCAnYXV0aFNlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsIGF1dGhTZXJ2aWNlKSB7XG5cblxuICAgICAgICB9XSk7XG4gICAgfVxuKSgpOyIsIihmdW5jdGlvbigpIHtcbiAgICBhbmd1bGFyLm1vZHVsZSgnYm9pbGVycGxhdGUnKS5jb250cm9sbGVyKCdzaWduVXBDb250cm9sbGVyJywgWyckc2NvcGUnLCAnYXV0aFNlcnZpY2UnLCBmdW5jdGlvbiAoJHNjb3BlLCBhdXRoU2VydmljZSkge1xuXG5cbiAgICB9XSk7XG59KSgpOyIsIihmdW5jdGlvbigpIHtcbiAgICBhbmd1bGFyLm1vZHVsZSgnbWFpbkN0cmwnLCBbXSkuY29udHJvbGxlcignbWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsIGZ1bmN0aW9uICgkc2NvcGUpIHtcblxuICAgIH1dKTtcbn0pKCk7Il19
